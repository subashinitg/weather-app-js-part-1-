const temp = document.getElementById("temp"),
    date = document.getElementById("date-time"),
    currentLocation = document.getElementById("location"),
    condition = document.getElementById("condition"),
    rain = document.getElementById("rain"),
    mainIcon = document.getElementById("icon"),
    uvIndex = document.querySelector(".uv-index"),
    uvText = document.querySelector(".uv-text"),
    windSpeed = document.querySelector(".wind-speed"),
    sunRise = document.querySelector(".sunrise"),
    sunSet = document.querySelector(".sunset"),
    humidity = document.querySelector(".humidity"),
    visibility = document.querySelector(".visibility"),
    humidityStatus = document.querySelector(".humidity-status"),
    airQuality = document.querySelector(".air-quality"),
    airQualityStatus = document.querySelector(".air-quality-status"),
    visibilityStatus = document.querySelector(".visibility-status"),
    weatherCards = document.querySelector("#weather-cards"),
    celciusBtn = document.querySelector(".celcius"),
    fahrenheitBtn = document.querySelector(".fahrenheit"),
    hourlyBtn = document.querySelector(".hourly"),
    weekBtn = document.querySelector(".week"),
    tempUnit = document.querySelectorAll(".temp-unit"),
    searchForm = document.querySelector("#search"),
    search = document.querySelector("#query");
   
let currentCity = "";
let currentUnit = "c";
let hourlyorWeek = "Week";


//update Date Time

function getDateTime() {
    let now = new Date(),
    hour = now.getHours(),
    minute = now.getMinutes();
     
    let days = [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
    ];
    //12 hour format
    hour = hour % 12;
    if(hour < 10) {
        hour = "0" + hour
    }
    if (minute < 10) {
        minute = "0"+ minute
        }

        let dayString = days[now.getDay()];
        return `${dayString}, ${hour}:${minute}`;
}

date.innerText = getDateTime();
//update time every second
setInterval(()=>{
    date.innerText = getDateTime();
}, 1000);

//function to get public ip with fetch

function getPublicIp() {
    fetch("https://geolocation-db.com/json/" ,{
        method:"GET",
    })
    .then((response)=>response.json())
        .then((data)=> {
            console.log(data);
            currentCity = data.city;
            getWeatherData(data.city , currentUnit , hourlyorWeek);
        });
}
getPublicIp();

//function to get weather data

function getWeatherData (city, unit, hourlyorWeek) {
    // const apiKey = "EJ6UBL2JEQGYB3AA4ENASN62J";
    fetch(
       https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/${city}?unitGroup=metric&key=EJ6UBL2JEQGYB3AA4ENASN62J&contentType=json,
        {
            method: "GET",
        }
        )
            .then((response) => response.json())
            .then((data) =>{
                let today = data.currentConditions;
                if(unit == "c") {
                    temp.innerText = today.temp;
                } else {
                    temp.innerText = celciusToFahrenheit(today.temp);
                }
                currentLocation.innerText = data.resolvedAddress;
                condition.innerText = today.conditions;
                rain.innerText = "perc - " + today.precip + "%";
                uvIndex.innerText = today.uvindex;
                windSpeed.innerText = today.windspeed;
                humidity.innerText = today.humidity + "%";
                visibility.innerText = today.visibility;
                airQuality.innerText = today.winddir;
                measureUvIndex(today.uvindex);
                updateHumidityStatus(today.humidity);
                updateVisibilityStatus(today.visibility);
                updateAirQualityStatus(today.winddir);
                sunRise.innerText = convertTimeTo12HourFormat(today.sunrise);
                sunSet.innerText = convertTimeTo12HourFormat(today.sunset);
                mainIcon.src = getIcon(today.icon);
                changeBackground(today.icon);
                if (hourlyorWeek == "hourly") {
                    updateForecast(data.days[0].hours , unit , "day");
                } else {
                    updateForecast(data.days, unit , "week");
                }
            })
            .catch((err) => {
                alert("City not found in our database");
            })
}